SCA
f0
### Final ANOVA
z7 = function(x){
Genotypes <- as.factor(paste(x[, 3], x[, 4]))
model1 <- aov(var ~ Replication + Block:Replication + Genotypes, data = x)
matrix1 <- as.matrix(anova(model1))
model4 <- aov(var ~ Line * Tester, data = x)
matrix4 <- as.matrix(anova(model4))
matrix <- rbind(matrix1[1:3, ], matrix4[1:3, ], matrix1[4, ])
total1 <- sum(matrix1[, 1])
total2 <- sum(matrix1[, 2])
Total <- c(total1, total2, NA, NA, NA)
matrix <- rbind(matrix, Total)
rownames(matrix) <- c("Replication", "Crosses", "Blocks within Replication"
"Lines", "Testers", "Lines X Testers",
"Error", "Total")
matrix
}
### Final ANOVA
z7 = function(x){
Genotypes <- as.factor(paste(x[, 3], x[, 4]))
model1 <- aov(var ~ Replication + Block:Replication + Genotypes, data = x)
matrix1 <- as.matrix(anova(model1))
model4 <- aov(var ~ Line * Tester, data = x)
matrix4 <- as.matrix(anova(model4))
matrix <- rbind(matrix1[1:3, ], matrix4[1:3, ], matrix1[4, ])
total1 <- sum(matrix1[, 1])
total2 <- sum(matrix1[, 2])
Total <- c(total1, total2, NA, NA, NA)
matrix <- rbind(matrix, Total)
rownames(matrix) <- c("Replication", "Crosses", "Blocks within Replication",
"Lines", "Testers", "Lines X Testers",
"Error", "Total")
matrix
}
anv = lapply(dat, z7)
names(anv) <- c(paste("Trait",1:v))
anv
f0
### Overall ANOVA and Cross ANOVA
z0 = function(x){
Genotypes <- as.factor(paste(x[, 4], x[, 5]))
model1 <- aov(var ~ Replication + Block:Replication + Genotypes, data = x)
matrix1 <- as.matrix(anova(model1))
}
f0 = lapply(dat, z0)
f0
### Overall ANOVA and Cross ANOVA
z0 = function(x){
Genotypes <- as.factor(paste(x[, 3], x[, 4]))
model1 <- aov(var ~ Replication + Block:Replication + Genotypes, data = x)
matrix1 <- as.matrix(anova(model1))
}
f0 = lapply(dat, z0)
f0
anv
anv = lapply(dat, z7)
names(anv) <- c(paste("Trait",1:v))
anv
### Mean of traits
mea = lapply(dat, function(x) mean(x$var))
### Co Efficient of variation
z8 = function(x){
cm <- x[7, 3]
}
f7 = lapply(dat, z7)
mse = lapply(f7, z8)
sqr = mapply('sqrt', mse)
cs = mapply('/', sqr, mea)
cv = as.vector(cs)*100
names(cv) <- c(paste0("Trait", 1:v))
cv
### Genotypic Phenotypic Variance and Covariance
z9  = function(x){
rmss = x[1, 3]
cmss = x[2, 3]
lmss = x[4, 3]
tmss = x[5, 3]
ltmss = x[6, 3]
emss = x[7, 3]
data.frame(rmss, cmss, lmss, tmss, emss)
}
ss = lapply(f7, z9)
EV = lapply(ss, function(x) x$emss)
GV = lapply(ss, function(x) (x$cmss - x$rmss)/r)
PV = mapply('+', GV, EV)
PCV = lapply(PV, function(x) (sqrt(x)*100))
PCV = mapply('/', PCV, mea)
GCV = lapply(GV, function(x) (sqrt(x)*100))
GCV = mapply('/', GCV, mea)
ECV = lapply(EV, function(x) (sqrt(x)*100))
ECV = mapply('/', ECV, mea)
BSH = mapply('/', GV, PV)
PGECV = list(PV, GV, EV, PCV, GCV, ECV, BSH)
PGECV = unlist(PGECV)
PGECV = matrix(PGECV, nrow = v, ncol = 7)
rownames(PGECV) = c(paste("Trait", 1:v))
colnames(PGECV) = c("Phenotypic Variance", "Genotypic Variance", "Environmental Variance",
"Phenotypic coefficient of Variation",  "Genotypic coefficient of Variation", "Environmental coefficient of Variation"
, "Broad sense heritability")
PGECV
### Standard Error and Critical Difference
emss = lapply(f7, function(x) x[7,3])
s1 = lapply(emss, function(x) sqrt(x/(r*t)))
s2 = lapply(emss, function(x) sqrt(x/(r*l)))
s3 = lapply(emss, function(x) sqrt(x/r))
s4 = lapply(emss, function(x) sqrt(2*x/(r*t)))
s5 = lapply(emss, function(x) sqrt(2 * x/(r * l)))
s6 = lapply(emss, function(x) sqrt(2 * x/r))
ses <- list(s1, s2, s3, s4, s5, s6)
ses= unlist(ses)
sesmat = matrix(ses,nrow = v,ncol = 6)
colnames(sesmat) <- c("S.E. gca for line", "S.E. gca for tester",
"S.E. sca effect", "S.E. (gi - gj)line",
"S.E. (gi - gj)tester", "S.E. (sij - skl)tester")
rownames(sesmat) <- c(paste("Trait", 1:v))
sesmat
### Critical difference
df =  lapply(f7,function(x) x[7, 1])
cri = lapply(df, function(x) abs(qt(0.05/2, x)))
se = c(s1, s2, s3, s4, s5, s6)
cd = mapply('*', se, cri)
cd = unlist(cd)
cdmat = matrix(cd,nrow = v,ncol = 6)
rownames(cdmat) <- c(paste("Trait", 1:v))
colnames(cdmat) = c("C.D. gca for line", "C.D. gca for tester",
"C.D. sca effect", "C.D. (gi - gj)line",
"C.D. (gi - gj)tester", "C.D. (sij - skl)tester")
cdmat
### Additive Variance and Dominance Variance
z10 = function(x){
cov1 = (x[3, 3] - x[5, 3])/(r * t)
cov2 = (x[4, 3] - x[5, 3])/(r * l)
cov3 = (((l - 1) * x[3, 3] + (t - 1) * x[4,3])/(l + t - 2) - x[5, 3])/(r * (2 * l * t - l - t))
cov4 = ((x[3, 3] - x[6, 3]) + (x[4, 3] - x[6, 3]) + (x[5, 3] - x[6, 3]))/(3 *  r) + (6 * r * cov3 - r * (l + t) * cov3)/(3 * r)
data.frame(cov1, cov2, cov3, cov4)
}
cov = lapply(f7, z10)
cov1 = lapply(cov, function(x) x$cov1)
cov2 = lapply(cov, function(x) x$cov2)
cov3 = lapply(cov, function(x) x$cov3)
cov4 = lapply(cov, function(x) x$cov4)
### Additive Variance and Dominance Variance
z10 = function(x){
cov1 = (x[4, 3] - x[6, 3])/(r * t)
cov2 = (x[5, 3] - x[6, 3])/(r * l)
cov3 = (((l - 1) * x[4, 3] + (t - 1) * x[5,3])/(l + t - 2) - x[6, 3])/(r * (2 * l * t - l - t))
cov4 = ((x[4, 3] - x[7, 3]) + (x[5, 3] - x[7, 3]) + (x[6, 3] - x[7, 3]))/(3 *  r) + (6 * r * cov3 - r * (l + t) * cov3)/(3 * r)
data.frame(cov1, cov2, cov3, cov4)
}
cov = lapply(f7, z10)
cov1 = lapply(cov, function(x) x$cov1)
cov2 = lapply(cov, function(x) x$cov2)
cov3 = lapply(cov, function(x) x$cov3)
cov4 = lapply(cov, function(x) x$cov4)
F = 0
Var.Add0 = lapply(cov, function(x) x$cov3*(4/(1 + F)))
var.Dom0 = lapply(f7, function(x) ((x[6, 3] - x[7, 3])/r) * (2/(1 + F)))
F = 1
Var.Add1 = lapply(cov, function(x) x$cov3 * (4/(1 + F)))
Var.Dom1 = lapply(f7, function(x) ((x[6, 3] - x[7, 3])/r) * (2/(1 +  F)))
vari = list(cov1, cov2, cov3, cov4, Var.Add0, Var.Add1, var.Dom0, Var.Dom1)
vari = unlist(vari)
varimat = matrix(vari, nrow = v, ncol = 8)
colnames(varimat) =  c("Cov H.S. (line)", "Cov H.S. (tester)",
"Cov H.S. (average)", "Cov F.S. (average)",
"Addittive Variance(F=0)", "Addittive Variance(F=1)",
"Dominance Variance(F=0)", "Dominance Variance(F=1)")
rownames(varimat) = c(paste("Trait", 1:v))
varimat
### Contribution of Line, Testers and Line x Tester
c1 = lapply(f7, function(x) x[4, 2] * 100/x[2, 2])
c2 = lapply(f7, function(x) x[5, 2] * 100/x[2, 2])
c3 = lapply(f7, function(x) x[6, 2] * 100/x[2, 2])
cc = list(c1,c2,c3)
cc = unlist(cc)
cmat = matrix(cc, nrow = v, ncol = 3)
rownames(cmat) = c(paste("Trait", 1:v))
colnames(cmat) = c("Lines", "Tester", " Line x Tester")
cmat
list(Mean = indmean, GCA.Line = lgca, GCA.Tester = tgca, SCA = SCA,
ANOVA = anv, CV = cv, Variance.Covariance = PGECV, Std.Error = sesmat,
C.D. = cdmat, Add.Dom.Var = varimat, Contribution.of.Line.Tester = cmat)
ltcmts = function(data, replication, line, tester, traits, block)
{
replication <- deparse(substitute(replication))
block <- deparse(substitute(block))
line <- deparse(substitute(line))
tester <- deparse(substitute(tester))
cat("\nAnalysis of Line x Tester for Multiple traits: ", "\n")
dataset = data.frame( Replication= as.factor(data[["replication"]]), Block = as.factor(data[["block"]]),
Line = as.factor(data[["line"]]), Tester = as.factor(data[["tester"]]), traits)
### Levels
r = nlevels(dataset$Replication)
l = nlevels(dataset$Line)
t = nlevels(dataset$Tester)
v = ncol(traits)
### Converting data to list
az = as.list.data.frame(traits)
rep = dataset$Replication
lin = dataset$Line
tes = dataset$Tester
blk = dataset$Block
az = lapply(az, cbind, rep)
az = lapply(az, cbind, blk)
az = lapply(az, cbind, lin)
az = lapply(az, cbind, tes)
z000 = function(x){
Replication = as.factor(x[,2])
Block = as.factor(x[,3])
Line = as.factor(x[,4])
Tester = as.factor(x[,5])
dat = data.frame(Replication, Block, Line, Tester, var = x[,1])
}
dat = lapply(az, z000)
### Mean for each of the trait
z00 = function(x){
tapply(x[, 5], x[, 3:4], mean, na.rm = TRUE)
}
indmean  = lapply(dat, z00)
indmean
names(indmean) = c(paste("Trait", 1:v))
indmean
### Overall ANOVA and Cross ANOVA
z0 = function(x){
Genotypes <- as.factor(paste(x[, 3], x[, 4]))
model1 <- aov(var ~ Replication + Block:Replication + Genotypes, data = x)
matrix1 <- as.matrix(anova(model1))
}
f0 = lapply(dat, z0)
f0
### Line Tester ANOVA
z1 = function(x){
model4 <- aov(var ~ Line * Tester, data = x)
matrix4 <- as.matrix(anova(model4))
}
f1 = lapply(dat, z1)
f1
### GCA lines
z4 = function(x){
Means1 = tapply(x[, 5], x[, 3], mean)
gca = Means1 - mean(x[, 5])
data.frame(gca)
}
f4 = lapply(dat, z4)
f4 = unlist(f4)
lgca = matrix(f4, nrow = l, ncol = v)
rownames(lgca) = c(paste("Line", 1:l))
colnames(lgca) = c(paste("Trait", 1:v))
lgca
### GCA testers
z5 = function(x){
Means2 = tapply(x[, 5], x[, 4], mean)
Means2 - mean(x[, 5])
}
f5 = lapply(dat, z5)
f5 = unlist(f5)
tgca = matrix(f5, nrow = t, ncol = v)
rownames(tgca) = c(paste("Tester", 1:t))
colnames(tgca) = c(paste("Trait", 1:v))
tgca
### SCA
z6 = function(x){
avg <- tapply(x[, 5], x[, 3:4], mean, na.rm = TRUE)
sca  = t(t(avg-rowMeans(avg)) - colMeans(avg)) + mean(avg)
}
SCA = lapply(dat, z6)
names(SCA) = c(paste("Trait", 1:v))
SCA
### Final ANOVA
z7 = function(x){
Genotypes <- as.factor(paste(x[, 3], x[, 4]))
model1 <- aov(var ~ Replication + Block:Replication + Genotypes, data = x)
matrix1 <- as.matrix(anova(model1))
model4 <- aov(var ~ Line * Tester, data = x)
matrix4 <- as.matrix(anova(model4))
matrix <- rbind(matrix1[1:3, ], matrix4[1:3, ], matrix1[4, ])
total1 <- sum(matrix1[, 1])
total2 <- sum(matrix1[, 2])
Total <- c(total1, total2, NA, NA, NA)
matrix <- rbind(matrix, Total)
rownames(matrix) <- c("Replication", "Crosses", "Blocks within Replication",
"Lines", "Testers", "Lines X Testers",
"Error", "Total")
matrix
}
anv = lapply(dat, z7)
names(anv) <- c(paste("Trait",1:v))
anv
### Mean of traits
mea = lapply(dat, function(x) mean(x$var))
### Co Efficient of variation
z8 = function(x){
cm <- x[7, 3]
}
f7 = lapply(dat, z7)
mse = lapply(f7, z8)
sqr = mapply('sqrt', mse)
cs = mapply('/', sqr, mea)
cv = as.vector(cs)*100
names(cv) <- c(paste0("Trait", 1:v))
cv
### Genotypic Phenotypic Variance and Covariance
z9  = function(x){
rmss = x[1, 3]
cmss = x[2, 3]
lmss = x[4, 3]
tmss = x[5, 3]
ltmss = x[6, 3]
emss = x[7, 3]
data.frame(rmss, cmss, lmss, tmss, emss)
}
ss = lapply(f7, z9)
EV = lapply(ss, function(x) x$emss)
GV = lapply(ss, function(x) (x$cmss - x$rmss)/r)
PV = mapply('+', GV, EV)
PCV = lapply(PV, function(x) (sqrt(x)*100))
PCV = mapply('/', PCV, mea)
GCV = lapply(GV, function(x) (sqrt(x)*100))
GCV = mapply('/', GCV, mea)
ECV = lapply(EV, function(x) (sqrt(x)*100))
ECV = mapply('/', ECV, mea)
BSH = mapply('/', GV, PV)
PGECV = list(PV, GV, EV, PCV, GCV, ECV, BSH)
PGECV = unlist(PGECV)
PGECV = matrix(PGECV, nrow = v, ncol = 7)
rownames(PGECV) = c(paste("Trait", 1:v))
colnames(PGECV) = c("Phenotypic Variance", "Genotypic Variance", "Environmental Variance",
"Phenotypic coefficient of Variation",  "Genotypic coefficient of Variation", "Environmental coefficient of Variation"
, "Broad sense heritability")
PGECV
### Standard Error and Critical Difference
emss = lapply(f7, function(x) x[7,3])
s1 = lapply(emss, function(x) sqrt(x/(r*t)))
s2 = lapply(emss, function(x) sqrt(x/(r*l)))
s3 = lapply(emss, function(x) sqrt(x/r))
s4 = lapply(emss, function(x) sqrt(2*x/(r*t)))
s5 = lapply(emss, function(x) sqrt(2 * x/(r * l)))
s6 = lapply(emss, function(x) sqrt(2 * x/r))
ses <- list(s1, s2, s3, s4, s5, s6)
ses= unlist(ses)
sesmat = matrix(ses,nrow = v,ncol = 6)
colnames(sesmat) <- c("S.E. gca for line", "S.E. gca for tester",
"S.E. sca effect", "S.E. (gi - gj)line",
"S.E. (gi - gj)tester", "S.E. (sij - skl)tester")
rownames(sesmat) <- c(paste("Trait", 1:v))
sesmat
### Critical difference
df =  lapply(f7,function(x) x[7, 1])
cri = lapply(df, function(x) abs(qt(0.05/2, x)))
se = c(s1, s2, s3, s4, s5, s6)
cd = mapply('*', se, cri)
cd = unlist(cd)
cdmat = matrix(cd,nrow = v,ncol = 6)
rownames(cdmat) <- c(paste("Trait", 1:v))
colnames(cdmat) = c("C.D. gca for line", "C.D. gca for tester",
"C.D. sca effect", "C.D. (gi - gj)line",
"C.D. (gi - gj)tester", "C.D. (sij - skl)tester")
cdmat
### Additive Variance and Dominance Variance
z10 = function(x){
cov1 = (x[4, 3] - x[6, 3])/(r * t)
cov2 = (x[5, 3] - x[6, 3])/(r * l)
cov3 = (((l - 1) * x[4, 3] + (t - 1) * x[5,3])/(l + t - 2) - x[6, 3])/(r * (2 * l * t - l - t))
cov4 = ((x[4, 3] - x[7, 3]) + (x[5, 3] - x[7, 3]) + (x[6, 3] - x[7, 3]))/(3 *  r) + (6 * r * cov3 - r * (l + t) * cov3)/(3 * r)
data.frame(cov1, cov2, cov3, cov4)
}
cov = lapply(f7, z10)
cov1 = lapply(cov, function(x) x$cov1)
cov2 = lapply(cov, function(x) x$cov2)
cov3 = lapply(cov, function(x) x$cov3)
cov4 = lapply(cov, function(x) x$cov4)
F = 0
Var.Add0 = lapply(cov, function(x) x$cov3*(4/(1 + F)))
var.Dom0 = lapply(f7, function(x) ((x[6, 3] - x[7, 3])/r) * (2/(1 + F)))
F = 1
Var.Add1 = lapply(cov, function(x) x$cov3 * (4/(1 + F)))
Var.Dom1 = lapply(f7, function(x) ((x[6, 3] - x[7, 3])/r) * (2/(1 +  F)))
vari = list(cov1, cov2, cov3, cov4, Var.Add0, Var.Add1, var.Dom0, Var.Dom1)
vari = unlist(vari)
varimat = matrix(vari, nrow = v, ncol = 8)
colnames(varimat) =  c("Cov H.S. (line)", "Cov H.S. (tester)",
"Cov H.S. (average)", "Cov F.S. (average)",
"Addittive Variance(F=0)", "Addittive Variance(F=1)",
"Dominance Variance(F=0)", "Dominance Variance(F=1)")
rownames(varimat) = c(paste("Trait", 1:v))
varimat
### Contribution of Line, Testers and Line x Tester
c1 = lapply(f7, function(x) x[4, 2] * 100/x[2, 2])
c2 = lapply(f7, function(x) x[5, 2] * 100/x[2, 2])
c3 = lapply(f7, function(x) x[6, 2] * 100/x[2, 2])
cc = list(c1,c2,c3)
cc = unlist(cc)
cmat = matrix(cc, nrow = v, ncol = 3)
rownames(cmat) = c(paste("Trait", 1:v))
colnames(cmat) = c("Lines", "Tester", " Line x Tester")
cmat
list(Mean = indmean, GCA.Line = lgca, GCA.Tester = tgca, SCA = SCA,
ANOVA = anv, CV = cv, Variance.Covariance = PGECV, Std.Error = sesmat,
C.D. = cdmat, Add.Dom.Var = varimat, Contribution.of.Line.Tester = cmat)
}
dataset = ltcmts(alphaltmt, replication, line, tester, alphaltmt[,5:7], block)
dataset
library(readxl)
datt <- read_excel("L:/Lak Pae/datt.xlsx")
View(datt)
library(readxl)
group_final <- read_excel("L:/Lak Pae/group final.xlsx")
View(group_final)
gr = group_final[-1,]
gr <- gr %>% mutate_if(is.character,as.factor)
library(dplyr)
gr <- gr %>% mutate_if(is.character,as.factor)
View(gr)
gr = group_final[-1,]
gr <- gr %>% mutate_if(is.character,as.factor)
View(gr)
gr[-1,]
gr = gr[-1,]
View(gr)
View(group_final)
###############
mm = data.frame(gr$RFS...26)
colnames(mm) = c("gen")
aa = inner_join(datt, mm)
write.csv(aa, "RFS...26.csv")
library(readxl)
rcbdltcchkpar <- read_excel("G:/New folder/rcbdltcchkpar.xlsx")
View(rcbdltcchkpar)
View(rcbdltcchkpar)
ltcchkpar = function(data, replication, line, tester, check, y){
replication <- deparse(substitute(replication))
line <- deparse(substitute(line))
tester <- deparse(substitute(tester))
check <- deparse(substitute(check))
var <- deparse(substitute(y))
cat("\nAnalysis of Line x Tester with crosses and checks: ", Y, "\n")
dataset <-data.frame(Replications= as.factor(data[["replication"]]),
Lines = as.factor(data[["line"]]), Testers = as.factor(data[["tester"]]),
Checks = as.factor(data[["check"]]), var = data[[var]])
}
dataset = ltcchkpar(rcbdltcchkpar, replication, line, tester, check, yield)
View(rcbdltcchkpar)
ltcchkpar = function(data, replication, line, tester, check, y){
replication <- deparse(substitute(replication))
line <- deparse(substitute(line))
tester <- deparse(substitute(tester))
check <- deparse(substitute(check))
var <- deparse(substitute(y))
cat("\nAnalysis of Line x Tester with crosses and checks: ",  "\n")
dataset <-data.frame(Replications= as.factor(data[["replication"]]),
Lines = as.factor(data[["line"]]), Testers = as.factor(data[["tester"]]),
Checks = as.factor(data[["check"]]), var = data[[var]])
}
dataset = ltcchkpar(rcbdltcchkpar, replication, line, tester, check, yield)
View(dataset)
l<- length(levels(dataset[,2]))
r<- length(levels(dataset[,1]))
t<- length(levels(dataset[,3]))
c<- length(levels(dataset[,4]))
View(dataset)
Genotype = as.factor(paste(dataset[,2],dataset[,3], dataset[,4]))
# ANOVA
model1<-aov(var ~ Replications + Genotype, data=dataset)
matrix1<-as.matrix(anova(model1))
matrix1
# Line Tester ANOVA
datachk <- subset(dataset, is.na(dataset[, 2]) | is.na(dataset[, 3]))
View(datachk)
datapar = datapar1[,-3]
# Line Tester ANOVA
datapar1 = subset(dataset, is.na(dataset[, 2]) | is.na(dataset[, 3]))
datapar = datapar1[,-3]
View(datapar)
datapar = datapar1[,-4]
View(datapar)
# Line Tester ANOVA
datapar1 = subset(dataset, !is.na(dataset[, 2]) | !is.na(dataset[, 3]))
View(datapar1)
# Line Tester ANOVA
datalt = dataset[!is.na(dataset$Lines), ]
View(datalt)
datalt = dataset[!is.na(dataset$Testers), ]
View(datalt)
# Line Tester ANOVA
datalt = dataset[!is.na(dataset$Lines), ]
datalt = dataset[!is.na(datalt$Testers), ]
View(datalt)
# Line Tester ANOVA
datalt = dataset[!is.na(dataset$Lines), ]
View(dataset)
# Line Tester ANOVA
datalt1 = dataset[!is.na(dataset$Lines), ]
datalt = dataset[!is.na(datalt1$Testers), ]
View(datalt)
datalt = datalt1[!is.na(datalt1$Testers), ]
View(datalt)
model4 <- aov(var ~ Lines * Testers, data = datalt)
matrix4 <- as.matrix(anova(model4))
matrix4
View(datalt)
model4 = aov(var ~ Lines + Testers, data = datapar)
View(datapar)
Parents = as.factor(paste(datapar[,2],datapar[,3]))
model5 = aov(var ~ Replications + Parents, data = datapar)
matrix5 = as.matrix(anova(model5))
matrix5
View(dataset)
# Parental ANOVA
datapar0 = dataset[,-4]
View(datapar0)
